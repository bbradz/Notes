When working on a Software development team one needs to be able to make informed decisions of what to do and what not to do in macro-structuring the class hierarchies of your team's project. You need to make sure the code your working on is going to be durable and flexible into the future as the demands of the codebase change. This folder includes the Markdown files of the Notes I take on *Design Patterns: Elements of Reusable Object-Oriented Software* a book aimed at teaching the patterns which have been proven their use in allowing the development of complex class structures without bogging down everyone into development hell.

This was the first on my list of textbooks to work through over the course of this Summer because of it broad applicability to any type of CS work I might end up doing in the future and because of it's importance as a groundwork for any large projects I may be able to pull off with this free time I've been blessed with.

Many of these files will not look nearly as pretty as they do in Obsidian because certain characters are typed in the context of writing them to be as easily viewable within Obsidian which processes those characters in special ways.

By the time I am done with this book I will have read about, analyzed, and developed personal notation on the tradeoffs around and how to implement 23 different design patterns serving Creational, Structural, and Behavioral OO Design. I will have not only developed by understanding of how to develop large-scale OO systems but have also acquired many new tools of Design Patterns to apply to OO systems in the future in order to be able to develop new applications in flexible and efficient manors.
